{"mappings":"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","sources":["src/projectiles.js","src/enemy.js","src/index.js","src/player.js"],"sourcesContent":["import { canvas, c } from \"./index\";\r\n\r\nclass Projectile {\r\n  constructor(x, y, radius, color, velocity) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.radius = radius;\r\n    this.color = color;\r\n    this.velocity = velocity;\r\n  }\r\n  draw() {\r\n    c.beginPath();\r\n    c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\r\n    c.fillStyle = this.color;\r\n    c.fill();\r\n  }\r\n  update(){\r\n      this.draw()\r\n      this.x = this.x + this.velocity.x\r\n      this.y = this.y + this.velocity.y\r\n  }\r\n}\r\n\r\nexport { Projectile };\r\n","import { canvas, c } from \"./index\";\r\n\r\nclass Enemy {\r\n  constructor(x, y, radius, color, velocity) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.radius = radius;\r\n    this.color = color;\r\n    this.velocity = velocity;\r\n  }\r\n  draw() {\r\n    c.beginPath();\r\n    c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\r\n    c.fillStyle = this.color;\r\n    c.fill();\r\n  }\r\n  update(){\r\n      this.draw()\r\n      this.x = this.x + this.velocity.x\r\n      this.y = this.y + this.velocity.y\r\n  }\r\n}\r\n\r\nexport { Enemy };","import { Player } from \"./player\";\r\nimport { Projectile } from \"./projectiles\";\r\nimport { Enemy } from \"./enemy\";\r\n\r\nconst canvas = document.querySelector(\"canvas\");\r\nconst c = canvas.getContext(\"2d\");\r\n\r\ncanvas.width = innerWidth;\r\ncanvas.height = innerHeight;\r\n\r\nconst x = canvas.width / 2;\r\nconst y = canvas.height / 2;\r\n\r\nconst player = new Player(x, y, 30, \"blue\");\r\n\r\nconst projectiles = [];\r\nconst enemies = [];\r\n\r\nfunction spawnEnemies() {\r\n  setInterval(() => {\r\n    const radius = Math.random() * (30 - 4) + 4;\r\n    let x\r\n    let y\r\n\r\n    if (Math.random() < 0.5 ) {\r\n      x = Math.random() < 0.5 ? 0 - radius : canvas.width + radius;\r\n      y = Math.random() * canvas.height\r\n    }else{\r\n      x = Math.random() * canvas.width\r\n      y = Math.random() < 0.5 ? 0 - radius : canvas.height + radius;\r\n    }\r\n    \r\n    const color = \"green\";\r\n    const angle = Math.atan2(\r\n      canvas.height / 2 - y,\r\n      canvas.width / 2 - x\r\n    );\r\n    const velocity = {\r\n      x: Math.cos(angle),\r\n      y: Math.sin(angle),\r\n    };\r\n    enemies.push(new Enemy(x, y, radius, color, velocity));\r\n    console.log(enemies);\r\n  }, 1000);\r\n}\r\n\r\nfunction animate() {\r\n  requestAnimationFrame(animate);\r\n  c.clearRect(0, 0, canvas.width, canvas.height);\r\n  player.draw();\r\n\r\n  projectiles.forEach((projectile) => {\r\n    projectile.update();\r\n  });\r\n\r\n  enemies.forEach((enemy, index) => {\r\n    enemy.update();\r\n\r\n    projectiles.forEach((projectile, projectileIndex) =>{\r\n      const dist = Math.hypot(projectile.x -enemy.x, projectile.y - enemy.y)\r\n      \r\n      if(dist - enemy.radius -projectile.radius < 1){\r\n        setTimeout(() => {\r\n          enemies.splice(index, 1)\r\n          projectiles.splice(projectileIndex, 1)\r\n        }, 0);\r\n       \r\n      }\r\n    })\r\n  });\r\n}\r\n\r\naddEventListener(\"click\", (event) => {\r\n  const angle = Math.atan2(\r\n    event.clientY - canvas.height / 2,\r\n    event.clientX - canvas.width / 2\r\n  );\r\n  const velocity = {\r\n    x: Math.cos(angle),\r\n    y: Math.sin(angle),\r\n  };\r\n  projectiles.push(\r\n    new Projectile(canvas.width / 2, canvas.height / 2, 5, \"red\", velocity)\r\n  );\r\n});\r\n\r\nanimate();\r\nspawnEnemies();\r\n\r\nexport { canvas, c };\r\n","import { canvas, c } from \"./index\";\r\n\r\nclass Player {\r\n  constructor(x, y, radius, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.radius = radius;\r\n    this.color = color;\r\n  }\r\n  draw() {\r\n    c.beginPath();\r\n    c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\r\n    c.fillStyle = this.color;\r\n    c.fill();\r\n  }\r\n}\r\n\r\nexport { Player };\r\n"],"names":["$6022c694cdaf5679$export$58825bda29b44ca2","constructor","x","y","radius","color","velocity","this","draw","$35da740d59af89ba$export$db3b6bfb95261072","beginPath","arc","Math","PI","fillStyle","fill","update","$e410b08aadc0a985$export$eefe978c73a9a6","$35da740d59af89ba$export$67ea982130081db","document","querySelector","getContext","width","innerWidth","height","innerHeight","$35da740d59af89ba$var$x","$35da740d59af89ba$var$y","$35da740d59af89ba$var$player","$35da740d59af89ba$var$projectiles","$35da740d59af89ba$var$enemies","addEventListener","event","angle","atan2","clientY","clientX","cos","sin","push","$35da740d59af89ba$var$animate","requestAnimationFrame","clearRect","forEach","projectile","enemy","index","projectileIndex","hypot","setTimeout","splice","setInterval","random","x1","y1","console","log"],"version":3,"file":"index.29269fe1.js.map"}